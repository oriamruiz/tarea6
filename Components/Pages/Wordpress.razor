@page "/wordpress"

@using System.Net.Http.Json
@using System.Text.RegularExpressions

<h3>
    <i class="bi bi-gender-neuter"></i>
    CDN Deportes wordpress

</h3>
<hr />

<div class="mb-3" style="background-color: #042F7D; height: 170px;">
    <img src="https://cdndeportes.com.do/wp-content/uploads/2023/11/CDN-Deportes-Logo.png" width="100%" height="150" style="padding-top: 10px;" />

</div>

<h2 class="mb-3">Últimas Noticias</h2>

<hr />

@if (posts == null)
{
    <p>Cargando noticias...</p>
}
else if (posts.Length == 0)
{
    <p>No hay noticias disponibles.</p>
}
else
{
    <ul>
        @foreach (var post in posts)
        {
            <li class="mb-2">
                <h3>@post.title.rendered</h3>
                <p>@CleanHtml(post.excerpt.rendered.ToString()) </p>
                <a href="@post.link" target="_blank">Visitar noticia</a>
            </li>
            <hr />
        }
    </ul>
}

@code {
    private Post[]? posts;

    protected override async Task OnInitializedAsync()
    {
        using (var httpClient = new HttpClient())
        {
            posts = await httpClient.GetFromJsonAsync<Post[]>("https://cdndeportes.com.do/wp-json/wp/v2/posts?per_page=3");

        }
    }

    public class Post
    {
        public Title title { get; set; }
        public Excerpt excerpt { get; set; }
        public string link { get; set; }

        public class Title
        {
            public string rendered { get; set; }
        }

        public class Excerpt
        {
            public string rendered { get; set; }
        }
    }

    private string CleanHtml(string html)
    {
        // Eliminar etiquetas HTML usando expresiones regulares
        return Regex.Replace(html, "<.*?>", string.Empty);
    }
}